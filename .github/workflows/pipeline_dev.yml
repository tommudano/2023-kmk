name: CI/CD Pipeline

env:
    # VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    # VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
    push:
        branches:
            - develop

jobs:
    build-and-deploy-frontend-development:
        runs-on: ubuntu-latest
        steps:
            # - uses: actions/checkout@v4
            # - name: Install Vercel CLI
            #   run: npm install --global vercel@latest
            # - name: Pull Vercel Environment Information
            #   run: vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}
            # - name: Build Project Artifacts
            #   run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
            # - name: Deploy Project Artifacts to Vercel
            #   run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

    test-backend:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: 3.10.5

            - name: Install Poetry
              working-directory: pid-be
              run: pip install poetry==1.1.15

            - name: Build backend
              working-directory: pid-be
              run:
                  poetry run python -m pip wheel --use-pep517 "grpcio (==1.58.0)" |
                  poetry install

            - name: Build notifications api
              working-directory: pid-notifications-api
              run: poetry install

            - name: Install firebase
              working-directory: pid-be
              run: npm install -g firebase-tools

            - name: Run emualtors and backend tests
              env:
                  ENV: ${{ secrets.ENV }}
                  REGISTER_URL: ${{ secrets.REGISTER_URL }}
                  LOGIN_URL: ${{ secrets.LOGIN_URL }}
                  PROJECT_ID: ${{ secrets.PROJECT_ID }}
                  PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
                  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
                  CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
                  CLIENT_ID: ${{ secrets.CLIENT_ID }}
                  AUTH_URI: ${{ secrets.AUTH_URI }}
                  TOKEN_URI: ${{ secrets.TOKEN_URI }}
                  AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}
                  CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
                  UNIVERSE_DOMAIN: ${{ secrets.UNIVERSE_DOMAIN }}
                  FIREBASE_AUTH_EMULATOR_HOST: ${{ secrets.FIREBASE_AUTH_EMULATOR_HOST }}
                  FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
                  FIREBASE_STORAGE_EMULATOR_HOST: ${{ secrets.FIREBASE_STORAGE_EMULATOR_HOST }}
              working-directory: pid-be
              run: firebase emulators:exec "poetry run pytest"

            - name: Run notifications tests
              env:
                  ENV: ${{ secrets.ENV }}
                  MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
                  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
                  MAIL_FROM: ${{ secrets.MAIL_FROM }}
                  MAIL_PORT: ${{ secrets.MAIL_PORT }}
                  MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
                  MAIL_FROM_NAME: ${{ secrets.MAIL_FROM_NAME }}
              working-directory: pid-notifications-api
              run: poetry run pytest
